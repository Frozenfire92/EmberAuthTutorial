{"name":"Ember Authorization Tutorial","tagline":"A quick Ember.js Authorization tutorial using Ember-CLI, Ember-Simple-Auth, and Torii","body":"# Ember-auth-tutorial\r\n\r\nThis is a tutorial outlining how to create an [Ember.js](http://emberjs.com) app with authorization using\r\n\r\n- [Ember-CLI](http://www.ember-cli.com/)\r\n- [Ember-Simple-Auth](https://github.com/simplabs/ember-simple-auth)\r\n- [Torii](https://github.com/Vestorly/torii)\r\n\r\n\r\n# Tutorial\r\n\r\nThis assumes you have git, node, bower, and ember-cli installed\r\n\r\n### Create a new ember app\r\n\r\n`ember init` or `ember new` see the ember-cli docs for more info\r\n\r\n\r\n\r\n### Get dependencies\r\n\r\n```\r\nnpm install --save-dev torii ember-cli-simple-auth-torii\r\nember generate ember-cli-simple-auth-torii\r\n```\r\n\r\n\r\n\r\n### Basic App setup\r\n\r\n```\r\nember g route application\r\nember g route protected\r\nember g route login\r\nember g controller login\r\n```\r\n\r\n\r\n\r\n### Add Mixins\r\n\r\n```\r\n//--- /app/routes/application.js\r\nimport Ember from 'ember';\r\nimport ApplicationRouteMixin from 'simple-auth/mixins/application-route-mixin';\r\n\r\nexport default Ember.Route.extend(ApplicationRouteMixin);\r\n```\r\n\r\n```\r\n//--- /app/routes/protected.js\r\nimport Ember from 'ember';\r\nimport AuthenticatedRouteMixin from 'simple-auth/mixins/authenticated-route-mixin';\r\n\r\nexport default Ember.Route.extend(AuthenticatedRouteMixin);\r\n```\r\n\r\n\r\n\r\n### Add Login Actions and setup controller\r\n\r\nYou could add more torii providers, see the [documentation](https://github.com/Vestorly/torii) for more info\r\n\r\n```\r\n//--- /app/controllers/login.js\r\nimport Ember from 'ember';\r\nimport LoginControllerMixin from 'simple-auth/mixins/login-controller-mixin';\r\n\r\nexport default Ember.Controller.extend(LoginControllerMixin, {\r\n  authenticator: 'authenticator:torii'\r\n});\r\n```\r\n\r\n```\r\n//--- /app/routes/login.js\r\nimport Ember from 'ember';\r\n\r\nexport default Ember.Route.extend({\r\n\tactions: {\r\n\t\tgoogleLogin: function() {\r\n\t\t\tthis.get('session').authenticate('simple-auth-authenticator:torii', 'google-oauth2');\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\n\r\n\r\n### Update your templates\r\n\r\nSee [example](https://github.com/Frozenfire92/EmberAuthTutorial/tree/master/app/templates)\r\n\r\n\r\n\r\n### Get google setup\r\n\r\nThis is likely analgous to other torii providers, I have only used google\r\n- client_id from [google](https://console.developers.google.com/project) under API & auth > credentials\r\n- update your authorized origins (ex. http://localhost:4200/)\r\n- update the redirect URI (ex. http://localhost:4200)\r\n\r\n\r\n\r\n### Update environment.js\r\n\r\n```\r\n//--- config/environment.js\r\nENV['torii'] = {\r\n  providers: {\r\n    'google-oauth2': {\r\n      apiKey: 'client_id from google',\r\n      scope: 'profile',\r\n      redirectUri: 'http://localhost:4200'\r\n    }\r\n  }\r\n};\r\n```\r\n\r\n\r\n\r\n### Test & Enjoy\r\n\r\nrun `ember server` and try it out!\r\n\r\n\r\n\r\n### Bonus: Get user info from google\r\n\r\nWe are going to create a custom torii provider that will also get the users information from google.\r\nWe need the custom provider because the default google-ouath2 uses the code workflow rather than the\r\ntoken workflow that the google plus api's need. This code extends [torii oauth2-bearer](https://github.com/Vestorly/torii/blob/master/lib/torii/providers/oauth2-bearer.js) and borrows from [torri google-oauth2](https://github.com/Vestorly/torii/blob/master/lib/torii/providers/google-oauth2.js). It also uses jQuery for the GET request, if there is a better way let me know!\r\n\r\n- [Custom Provider](https://github.com/Frozenfire92/EmberAuthTutorial/blob/master/app/torii-providers/google-token.js)\r\n\r\nThen update:\r\n\r\n- [environment.js](https://github.com/Frozenfire92/EmberAuthTutorial/blob/master/config/environment.js) torii provider to match the custom providers name (this provider also uses scope `profile email`)\r\n- Your [login action](https://github.com/Frozenfire92/EmberAuthTutorial/blob/master/app/routes/login.js) to match the custom providers name\r\n\r\nThen enable the Google+ API in your [google dev console](https://console.developers.google.com/project)\r\n\r\nYou now will have access to `session.content.userName` and `session.content.userEmail`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}